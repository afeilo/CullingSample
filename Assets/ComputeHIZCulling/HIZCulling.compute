// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#pragma multi_compile _ _REVERSED_Z  //不reversed 在opengl上很难剔除干净
#include "CommonInput.hlsl"
#include "HIZ.hlsl"

uint instanceCount;
StructuredBuffer<float4x4> localToWorldMatrixs;
AppendStructuredBuffer<float4x4> positionBuffer;
RWStructuredBuffer<uint> argsBuffer;

//获取物体的bounds 这里简单模拟一下local bounds
Bounds GetBounds(uint index)
{
    Bounds bounds;
    bounds.minPosition = mul(localToWorldMatrixs[index], float4(-0.5f, -0.5f, -0.5f, 1));
    bounds.maxPosition = mul(localToWorldMatrixs[index], float4(0.5f, 0.5f, 0.5f, 1));
    return bounds;
}


bool OcclusionCulling(uint index)
{
    Bounds worldBounds = GetBounds(index);
    return OcclusionCulling(worldBounds);
}

[numthreads(640,1,1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= instanceCount)
        return;
    if (!OcclusionCulling(id.x))
        return;
    positionBuffer.Append(localToWorldMatrixs[id.x]);
    InterlockedAdd(argsBuffer[1], 1);
}
